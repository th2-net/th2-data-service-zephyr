import org.jetbrains.kotlin.gradle.dsl.JvmTarget
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version "$kotlin_version"
    id "org.jetbrains.kotlin.kapt" version "$kotlin_version"
    id 'application'
    id 'com.exactpro.th2.gradle.component' version '0.1.1'
}

group 'com.exactpro.th2'
version release_version

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

tasks.withType(KotlinCompile).configureEach {
    compilerOptions {
        jvmTarget.set(JvmTarget.JVM_11)
        freeCompilerArgs.add("-opt-in=kotlin.RequiresOptIn")
    }
}

ext {
    ktorVersion = '2.3.3'
}

dependencies {

    // the library for interaction with infra API
    implementation 'com.exactpro.th2:common:5.14.0-dev'
    implementation 'com.exactpro.th2:common-utils:2.2.3-dev'
    implementation 'com.exactpro.th2:grpc-lw-data-provider:2.3.3-dev'
    implementation 'com.exactpro.th2:processor-core:0.3.0-dev'

    // Auto service
    compileOnly 'com.google.auto.service:auto-service-annotations:1.1.1'
    kapt 'com.google.auto.service:auto-service:1.1.1'

    // JIRA
    implementation group: 'com.atlassian.jira', name: 'jira-rest-java-client-core', version: '5.2.6'
    implementation(group: 'io.atlassian.fugue', name: 'fugue', version: '4.7.2') {
        because("It is required by JIRA rest client but for some reasons it is not in dependencies for it")
    }
    implementation('com.atlassian.jwt:jwt-core:3.3.1')
    implementation('com.atlassian.jwt:jwt-api:3.3.1')

    // Ktor
    implementation("io.ktor:ktor-client:$ktorVersion")
    implementation("io.ktor:ktor-client-content-negotiation:$ktorVersion")
    implementation("io.ktor:ktor-client-java:$ktorVersion") {
        because("the CIO (coroutine base engine) has some issues with SSL")
    }
    implementation("io.ktor:ktor-client-auth:$ktorVersion")
    implementation("io.ktor:ktor-client-logging:$ktorVersion")
    implementation("io.ktor:ktor-serialization-jackson:$ktorVersion")

    implementation("org.apache.commons:commons-collections4")

    implementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")

    // Idiomatic logging for Kotlin. Wraps slf4j
    implementation 'io.github.microutils:kotlin-logging:3.0.5'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
    testImplementation 'org.mockito.kotlin:mockito-kotlin:5.0.0'
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.3")
}

test {
    useJUnitPlatform()
    testLogging {
        showStandardStreams = true
    }
}

application {
    mainClass.set('com.exactpro.th2.processor.MainKt')
}